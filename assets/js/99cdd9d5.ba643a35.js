"use strict";(self.webpackChunkcs_421_source=self.webpackChunkcs_421_source||[]).push([[6042],{3905:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>u});var a=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,a)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,a,n=function(e,t){if(null==e)return{};var o,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)o=i[a],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),d=p(o),u=n,c=d["".concat(l,".").concat(u)]||d[u]||h[u]||i;return o?a.createElement(c,r(r({ref:t},m),{},{components:o})):a.createElement(c,r({ref:t},m))}));function u(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=o.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,r[1]=s;for(var p=2;p<i;p++)r[p]=o[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,o)}d.displayName="MDXCreateElement"},5435:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=o(7462),n=(o(7294),o(3905));const i={id:"hw6",title:"Homework 6"},r=void 0,s={unversionedId:"hw/hw6",id:"hw/hw6",title:"Homework 6",description:"You can now now find Task 2 of homework 6 further down on this page! Note that part 2 of Task 2 is optional and there are no points associated with completing this task. Completing part 2 of task 2 is strongly suggested but not required! Also, note that both Task 1 and 2 are due Fri 10/15 11pm.",source:"@site/docs/hw/hw6.md",sourceDirName:"hw",slug:"/hw/hw6",permalink:"/cs421/docs/hw/hw6",draft:!1,editUrl:"https://jhu-oose.github.io/cs421_f21/docs/hw/hw6.md",tags:[],version:"current",frontMatter:{id:"hw6",title:"Homework 6"},sidebar:"tutorialSidebar",previous:{title:"Homework 5",permalink:"/cs421/docs/hw/hw5"},next:{title:"Homework Onboarding",permalink:"/cs421/docs/onboarding"}},l={},p=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"Task 1",id:"task-1",level:2},{value:"Task 2",id:"task-2",level:2},{value:"Submission",id:"submission",level:2}],m={toc:p};function h(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{title:"TASK 2 now available!",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You can now now find Task 2 of homework 6 further down on this page! ",(0,n.kt)("strong",{parentName:"p"},"Note that part 2 of Task 2 is optional and there are no points associated with completing this task.")," Completing part 2 of task 2 is strongly suggested but not required! Also, note that both Task 1 and 2 are due Fri 10/15 11pm.")),(0,n.kt)("admonition",{title:"Note",type:"danger"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"This homework has two tasks: Task 1 and Task 2. You should start working on Task 1 now; Task 2 will be made available after Tue 10/12"),', once we have covered "deployment" and "continuous integration" concepts in class. ')),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"You are expected to work on this homework as a team in your (project) group."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Both Task 1 and Task 2 Due: Friday October 15th at 11pm EST (Baltimore time).")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"This assignment is worth 50 points.")))),(0,n.kt)("h2",{id:"learning-objectives"},"Learning Objectives"),(0,n.kt)("admonition",{title:"Objectives",type:"success"},(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Front-end styling, incorportating logic into front-end "),(0,n.kt)("li",{parentName:"ul"},"Gaining (more) familiarity with HTML, CSS and Javascript"),(0,n.kt)("li",{parentName:"ul"},"Deployment & Continuous Delivery (CD) using Github Actions"),(0,n.kt)("li",{parentName:"ul"},"Continuous Integration (CI) using Github Actions"))),(0,n.kt)("h2",{id:"task-1"},"Task 1"),(0,n.kt)("p",null,"You will be working with CSS and JavaScript to improve the front-end of ",(0,n.kt)("inlineCode",{parentName:"p"},"JBApp"),"."),(0,n.kt)("p",null,"Grab a copy of homework 6 starter code, under ",(0,n.kt)("inlineCode",{parentName:"p"},"hw6_starter")," folder, from the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/jhu-oose/JBApp"},"JBApp repo")," on ",(0,n.kt)("inlineCode",{parentName:"p"},"jhu-oose")," github organization. In class, we applied some basic styling to our html pages in the JBApp. We also warmed up with JavaScript to disallow empty usernames and also added delete buttons for each employer in the ",(0,n.kt)("em",{parentName:"p"},"employers")," view. Your task is to:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Add the ",(0,n.kt)("inlineCode",{parentName:"strong"},"add"),"!"),": Currently, ",(0,n.kt)("inlineCode",{parentName:"li"},"employers")," view shows a list of all the employers from the ",(0,n.kt)("inlineCode",{parentName:"li"},"employers")," table where we can remove any of the listed employers using the delete button (i.e. button labled ",(0,n.kt)("inlineCode",{parentName:"li"},"X"),") next to it. Let's improve this page such that we can do employer insertion also. Update ",(0,n.kt)("inlineCode",{parentName:"li"},"employers"),' page so that empty text fileds get shown at the very bottom after all the displayed rows where the user can type in an employer info to be inserted into the table. To the left of the text field, there must ba label "Add new: " and to the right of them there should be a little button similar to the delete button, but with the text of a checkmark character \u2705. ')),(0,n.kt)("p",null,(0,n.kt)("img",{src:o(7319).Z,width:"1366",height:"287"})),(0,n.kt)("p",null,"After a new employer is added, the page should refresh showing the newly added employer and the empty textfields and the add button at the bottom."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You can use the html code ",(0,n.kt)("inlineCode",{parentName:"p"},"&#10004;")," to produce a checkmark.")),(0,n.kt)("admonition",{title:"Implementation Tip",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("strong",{parentName:"p"},"HINT:")," One way to implement this is to create the label, three textboxes, and a submit button as one HTML form at the bottom of ",(0,n.kt)("inlineCode",{parentName:"p"},"employers.vm"),' page after all employers are shown! Next, set the "onsubmit" attribute of the ',(0,n.kt)("inlineCode",{parentName:"p"},"form")," tag to a Javascript function that you write in ",(0,n.kt)("inlineCode",{parentName:"p"},"employers.js")," where you send a HTTP Post request with the form data to the HTTP Post ",(0,n.kt)("inlineCode",{parentName:"p"},"employers")," endpoint. Once the HTTP Post is done then refresh the page (similar to what already is done in ",(0,n.kt)("inlineCode",{parentName:"p"},"deleteEmpoloyer"),").")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Validate!"),": Under the ",(0,n.kt)("inlineCode",{parentName:"p"},"src/main/resources/public/js"),", in the ",(0,n.kt)("inlineCode",{parentName:"p"},"validate.js")," write new a function (or functions) to make sure that the provided inputs are valid when adding an employer:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"An employer name is considered valid if it is not less than two characters, not longer than 150 characters and does not have any of the ",(0,n.kt)("inlineCode",{parentName:"li"},"$"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"@"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"^"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"%"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"~"),' characters in it. If employer name is invalid, show a dialogbox with the message: "Employer name cannot be less than 2 characters, more than 150 characters, or include $, @, ^, %, ~!"'),(0,n.kt)("li",{parentName:"ul"},"An employer sector cannot be less than two characters, more than 100 characters and may not contain any digits or any of the ",(0,n.kt)("inlineCode",{parentName:"li"},"$"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"@"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"^"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"%"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"~")," characters. ",(0,n.kt)("strong",{parentName:"li"},'If employer sector is invalid, show a dialogbox with the message: "Employer sector cannot be less than 2 characters, more than 100 characters, or include any digits or $, @, ^, %, ~!"')),(0,n.kt)("li",{parentName:"ul"},"No input validation needed on the ",(0,n.kt)("inlineCode",{parentName:"li"},"summary")," field!"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"Finish in style!"),": Write your own css file to be applied to the html views of the ",(0,n.kt)("inlineCode",{parentName:"p"},"JBApp"),". You can be creative here! Show us your artsy genes! :). It does not have to be a complex styling; write some basic styling for all the pages comparable to what we did in class. The css file we used in class is given as part of the starter code for your reference, but you should write your own css from scratch. At the very least, apply some stylings to the following components:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"all textboxes in all the pages"),(0,n.kt)("li",{parentName:"ul"},'all "submit" buttons in all the pages'),(0,n.kt)("li",{parentName:"ul"},"all heading titles(",(0,n.kt)("inlineCode",{parentName:"li"},"h1")," through ",(0,n.kt)("inlineCode",{parentName:"li"},"h5")," tags) in all the pages"),(0,n.kt)("li",{parentName:"ul"},"all hyperlinks in all the pages"),(0,n.kt)("li",{parentName:"ul"},"all labels in all the pages"),(0,n.kt)("li",{parentName:"ul"},"for the delete buttons in the ",(0,n.kt)("inlineCode",{parentName:"li"},"employers")," view, make the buttons circle-shaped and colored red; color the ",(0,n.kt)("inlineCode",{parentName:"li"},"X")," text white! You can use any sizing you want for the circles/text, but do not make them overly small/big!")))),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"You may not use any styling framework/library here. You need to write ",(0,n.kt)("em",{parentName:"p"},"vanilla")," css (i.e., pure css).")),(0,n.kt)("admonition",{type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"All stylings must be done in a separate css file name ",(0,n.kt)("inlineCode",{parentName:"p"},"myjbapp.css"),". Do not do any styling in the ",(0,n.kt)("inlineCode",{parentName:"p"},"html"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"vm")," files. Make sure to place the ",(0,n.kt)("inlineCode",{parentName:"p"},"myjbapp.css")," under ",(0,n.kt)("inlineCode",{parentName:"p"},"src\\main\\resources\\public\\css")," and load it into ",(0,n.kt)("inlineCode",{parentName:"p"},"top.vm"),".")),(0,n.kt)("h2",{id:"task-2"},"Task 2"),(0,n.kt)("p",null,"It is time to practice how to share the app you have crafted with the rest of the world! :) You will be deploying JBApp on Heroku:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},'Similar to what we did in class to deploy a "hello world" SparkJava app, you would deploy the result of your work from Task 1 to Heroku. If you like, you can try to deploy your "most-complete" version of JBApp (e.g. the version developed in previous homeworks with search functionality etc.). The primary goal here is successful deployment of the app, so we are less concerned about specific version of JBApp you deploy. ',(0,n.kt)("strong",{parentName:"li"},"At minimum though, we ask you to deploy the result of Task 1, but feel free to include more API endpoints and/or views also."))),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"You may deploy on any of your team's members' Heroku account. Note that Heroku's DBMS is Postgres (not SQLite), so you will likely need to make adjustments to your code base (making Postgres db connection instead of SQLite's, sql queries etc.) so that everything works just the way they work in your ",(0,n.kt)("em",{parentName:"p"},"development environment"),"!")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},'Make sure to check out all the steps needed for a sucessful deployment given under "Deployment, Continous Delivery/Integration (CI/CD)" readings.')),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Note that you need to add Postgres to your Heroku app as an add-on. You may do this either directly on ",(0,n.kt)("a",{parentName:"p",href:"https://dashboard.heroku.com/"},"https://wwww.heroku.com")," or via Heroku CLI command: ",(0,n.kt)("inlineCode",{parentName:"p"},"heroku addons:create heroku-postgresql"),". ")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"It might happen to you that you deploy the app, but when you visit the webpage, you get an ",(0,n.kt)("em",{parentName:"p"},"applicaiton error"),". If that happens to you, check out the logs to get clues as to why it is not working. You can do so via either Heroku web interface (go to the app from Heroku dashboard, click ",(0,n.kt)("inlineCode",{parentName:"p"},"More"),"->",(0,n.kt)("inlineCode",{parentName:"p"},"View logs")," at top-right corner of the page), or Heroku CLI by ",(0,n.kt)("inlineCode",{parentName:"p"},"heroku logs --tail -a APP_NAME")," where ",(0,n.kt)("inlineCode",{parentName:"p"},"APP_NAME")," is the heroku app name.")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Once you have successfully deployed the app, make sure to test all the views/endpoints/functionalities and verify everything is working as expected! For parts that interact with the database, you may either use Heroku CLI to check the status/content of of your databse and tables, or use a tool like ",(0,n.kt)("a",{parentName:"p",href:"https://sosedoff.github.io/pgweb/"},"pgweb"),".")),(0,n.kt)("ol",{start:2},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"OPTIONAL")," (No points given for this part): To get hands-on practice with continuous integraion (CI), push the deployed JPApp source code to some Github repo. Next, setup an automated deployment workflow using Github Actions similar to what we did in class on ",(0,n.kt)("inlineCode",{parentName:"li"},"jhu-heroku-demo")," App. The ",(0,n.kt)("inlineCode",{parentName:"li"},"jhu-heroku-demo")," app is available ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jhu-oose/jhu-heroku-demo"},"here")," for your reference. Once you successfully do this for JBApp, whenever a push is made to the master branch on your ",(0,n.kt)("inlineCode",{parentName:"li"},"JBApp"),"'s repo, it should trigger a cascade of ",(0,n.kt)("em",{parentName:"li"},"actions")," which includes creating a fresh build of the app (i.e., a fat Jar) and automatic deployment to Heroku. ")),(0,n.kt)("h2",{id:"submission"},"Submission"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},'To complete this homework, you will need to work with different libraries and tools. Aside from the relevant "Readings" provided on the course website, you may find the following resources useful:'),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.w3schools.com/html/default.asp"},"W3 Schools HTML Tutorial")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.w3schools.com/css/"},"W3 Schools CSS Tutorial")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Reference"},"MDN CSS reference")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript"},"MDN JS tutorial")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.w3schools.com/js/"},"W3 Schools JS tutorial")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://devcenter.heroku.com/articles/heroku-postgresql"},"Heroku Postgres manual")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions"},"Github Actions documentation")))),(0,n.kt)("admonition",{title:"Teamwork",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"You may use the group project repo we have provided you with, in the ",(0,n.kt)("inlineCode",{parentName:"p"},"jhu-oose")," Github organzition, for this homework assignment, but feel free to create and share a separate repo among yourselves and do your homework assignments in there. Either way, we expect you would make good use of git/Github to facilitate team collaboration on these team-based homework assignment, but will not track it. Finally, ",(0,n.kt)("strong",{parentName:"p"},"each member must contribute her/his fair share to completing these assignments. Be proactive and assign yourslef to tasks!"))),(0,n.kt)("admonition",{title:"submission",type:"danger"},(0,n.kt)("p",{parentName:"admonition"},"Once you have finished all the tasks (both task 1 and task 2 of the homework), zip your Gradle Project in a single zip file named ",(0,n.kt)("inlineCode",{parentName:"p"},"hw6.zip"),". ",(0,n.kt)("strong",{parentName:"p"},"Please make sure NOT to include ",(0,n.kt)("inlineCode",{parentName:"strong"},".idea"),", ",(0,n.kt)("inlineCode",{parentName:"strong"},"build"),", ",(0,n.kt)("inlineCode",{parentName:"strong"},"_MACOSX"),", ",(0,n.kt)("inlineCode",{parentName:"strong"},".DS_Store")," files/folders in your zip file.")," Submit ",(0,n.kt)("inlineCode",{parentName:"p"},"hw6.zip")," to Homework 6 link on Gradescope. ",(0,n.kt)("strong",{parentName:"p"},"For task 2, just include a ",(0,n.kt)("inlineCode",{parentName:"strong"},"README.md")," file within the project folder to contain the URL address to which the app is deplyed!")," Each group needs to make one submission only, so one person from the group makes the submission on behalf of everyone in the group. ",(0,n.kt)("em",{parentName:"p"},"We only require one submission from each group on Gradescope as a single zip file named ",(0,n.kt)("inlineCode",{parentName:"em"},"hw6.zip")))))}h.isMDXComponent=!0},7319:(e,t,o)=>{o.d(t,{Z:()=>a});const a=o.p+"assets/images/hw6-1-08b1b13c0a0eecf894f2fdeb8643a60e.png"}}]);