"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5082],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(a),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var l=2;l<r;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1752:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return u}});var n=a(7462),i=a(3366),r=(a(7294),a(3905)),o=["components"],c={id:"jdbc",title:"The Java Database Connectivity (JDBC) API",sidebar_label:"The Java Database Connectivity (JDBC) API"},s=void 0,l={unversionedId:"readings/wk4/jdbc",id:"readings/wk4/jdbc",isDocsHomePage:!1,title:"The Java Database Connectivity (JDBC) API",description:"Java Database Connectivity (JDBC) is an application programming interface (API) which defines how a client may access a database. JDBC is like a bridge between a Java application and a database.",source:"@site/docs/readings/wk4/jdbc.md",sourceDirName:"readings/wk4",slug:"/readings/wk4/jdbc",permalink:"/cs421_f21/docs/readings/wk4/jdbc",editUrl:"https://jhu-oose.github.io/cs421_f21/docs/readings/wk4/jdbc.md",version:"current",frontMatter:{id:"jdbc",title:"The Java Database Connectivity (JDBC) API",sidebar_label:"The Java Database Connectivity (JDBC) API"},sidebar:"tutorialSidebar",previous:{title:"Relational Databases",permalink:"/cs421_f21/docs/readings/wk4/rdbms"},next:{title:"Structured Query Language",permalink:"/cs421_f21/docs/readings/wk4/sql"}},p=[],d={toc:p};function u(e){var t=e.components,c=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Java Database Connectivity (JDBC) is an application programming interface (API) which defines how a client may access a database. JDBC is like a bridge between a Java application and a database."),(0,r.kt)("p",null,(0,r.kt)("img",{src:a(2577).Z})),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"sqlite-jdbc")," library (which we've added as a dependency) includes both the (SQLite) database system and its JDBC driver",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))," (to connect JDBC to the database)."),(0,r.kt)("p",null,"It is very easy to connect to a SQLite database: "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'import java.sql.DriverManager;\nimport java.sql.SQLException;\n\npublic class Main {\n    public static void main(String[] args) throws SQLException {\n        final String URI = "jdbc:sqlite:./JBApp.db";\n        Connection conn = DriverManager.getConnection(URI);\n\n        // do something with the connection\n\n        conn.close();\n\n    }\n}\n')),(0,r.kt)("p",null,"The application above will connect to a SQLite database file ",(0,r.kt)("inlineCode",{parentName:"p"},"JBApp.db")," (it will create it if it does not exist).\nWhen creating a ",(0,r.kt)("em",{parentName:"p"},"connection"),", you provide an argument that specifies the database that you want to connect to. This argument is called a ",(0,r.kt)("strong",{parentName:"p"},"Universal Resource Identifier (URI)"),". A URI includes the application interface (",(0,r.kt)("inlineCode",{parentName:"p"},"jdbc"),"), the RDBMS (",(0,r.kt)("inlineCode",{parentName:"p"},"sqlite"),"), where to find the database (the host and path, ",(0,r.kt)("inlineCode",{parentName:"p"},"./JBApp.db")," in the aforementioned example), and any other connection parameters required (such as login details). Note: different parts of URI is separated by a colon."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Common problems")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"When you run the code above, typically, if you get an error, it will be something like this:\n",(0,r.kt)("inlineCode",{parentName:"p"},'Exception in thread "main" java.sql.SQLException: No suitable driver found'),".\nMake sure ",(0,r.kt)("inlineCode",{parentName:"p"},"sqlite-jdbc")," library is added to your application, check for spelling mistakes and that it has the right path.\nAlso, ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/search?q=sqlite+jdbc+driver+installation"},"stackoverflow")," is your troubleshooting friend!"))),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},"JDBC is a set of interfaces; the interfaces are implemented by a database vendor's JDBC driver class. When you add the dependency for a database, it typically includes an application or data server as well as a JDBC driver that assists you to connect to the database in your Java application. ",(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0},2577:function(e,t,a){t.Z=a.p+"assets/images/jdbc-b56f22932c17065dd130df67bee45bb0.png"}}]);